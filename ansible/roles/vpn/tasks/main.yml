- name: Install required packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - python3-pip
    state: present
    update_cache: yes

- name: Ensure directory exists
  ansible.builtin.file:
    path: /home/rpi/files/wireguard
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0755'

- name: Deploy WireGuard container
  docker_container:
    name: wireguard
    image: linuxserver/wireguard
    state: started
    restart_policy: unless-stopped
    capabilities:
      - NET_ADMIN
      - SYS_MODULE
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "Europe/Warsaw"
      SERVERURL: "{{ ansible_default_ipv6.address }}"
      SERVERPORT: "51820"
      PEERS: "1"
      PEERDNS: "auto"
      ALLOWEDIPS: "0.0.0.0/0, ::/0"
      INTERNAL_SUBNET: "10.13.13.0"
    volumes:
      - "/home/rpi/files/wireguard:/config"
      - "/lib/modules:/lib/modules"
    ports:
      - "51820:51820/udp"
    sysctls:
      net.ipv4.conf.all.src_valid_mark: "1"

- name: Wait for WireGuard to initialize and create configs
  pause:
    seconds: 15

- name: Networking for VPN
  block:
    - name: Enable IPv4 forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        reload: yes

    - name: Enable IPv6 forwarding
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: '1'
        state: present
        reload: yes

    - name: Configure UFW to allow IP forwarding
      lineinfile:
        path: /etc/default/ufw
        regexp: '^DEFAULT_FORWARD_POLICY='
        line: 'DEFAULT_FORWARD_POLICY="ACCEPT"'
        backup: yes

    - name: Add NAT rules to UFW before.rules
      blockinfile:
        path: /etc/ufw/before.rules
        insertbefore: '^# Don.t delete these required lines'
        block: |
          # NAT table rules for WireGuard
          *nat
          :POSTROUTING ACCEPT [0:0]
          -A POSTROUTING -s 10.13.13.0/24 -o wlan0 -j MASQUERADE
          COMMIT
        marker: "# {mark} ANSIBLE MANAGED - WireGuard NAT"
        backup: yes

    - name: Reload UFW to apply NAT rules
      shell: ufw reload
      args:
        executable: /bin/bash
    
    - name: Allow WireGuard through firewall
      ufw:
        rule: allow
        port: "51820"
        proto: udp
        comment: 'wireguard'

    - name: Allow traffic on WireGuard interface
      ufw:
        rule: allow
        interface: wg0
        direction: in

- name: Share VPN configs with samba
  block:
    - name: Create directory for peer configs
      file:
        path: /home/rpi/files/wg-peers
        state: directory
        mode: '0755'

    - name: Create symlinks for WireGuard peer configs
      shell: |
        rm -rf /home/rpi/files/wg-peers/*
        for peer in /home/rpi/files/wireguard/peer[0-9]*; do
          if [ -d "$peer" ]; then 
            ln -s "$peer" /home/rpi/files/wg-peers/
          fi
        done
        exit 0
      args:
        executable: /bin/bash

    - name: Add Samba share for WireGuard peer configs
      blockinfile:
        path: /etc/samba/smb.conf
        block: |
          [wireguard]
          path = /home/rpi/files/wg-peers
          browseable = yes
          read only = yes
          guest ok = no
          valid users = {{ ansible_user }}
          create mask = 0664
          directory mask = 0775
          follow symlinks = yes
          wide links = yes
          unix extensions = no
        marker: "# {mark} ANSIBLE MANAGED BLOCK - WireGuard"
      notify: Restart samba

- name: Display instructions
  debug:
    msg:
      - "WireGuard is now running!"
      - "Remember to forward UDP port 51820 on your router to this Pi"
