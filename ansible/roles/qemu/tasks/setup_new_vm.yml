# Generic VM creation task - reusable for any VM

- name: Create VM using virt-install
  ansible.builtin.command:
    cmd: >-
      virt-install
      --name {{ vm_name }}
      --os-variant=generic
      --ram={{ memory_mb }}
      --vcpus={{ vcpus }}
      --disk {{ vm_image }},bus=virtio
      --import
      --graphics none
      --noautoconsole
      --network network={{ network_name }},model=virtio
      --arch aarch64
      --machine virt
      --boot firmware=efi,firmware.feature0.name=secure-boot,firmware.feature0.enabled=no
  args:
    creates: "/etc/libvirt/qemu/{{ vm_name }}.xml"
  register: vm_created

- name: Enable autostart for VM
  community.libvirt.virt:
    name: "{{ vm_name }}"
    autostart: yes
    uri: "qemu:///system"

- name: Wait for VM to initialize
  ansible.builtin.pause:
    seconds: 10

- name: Show new VM info
  ansible.builtin.debug:
    msg:
      - "VM created successfully:"
      - "Name: {{ vm_name }}"
      - "Memory: {{ memory_mb }}MB"
      - "CPUs: {{ vcpus }}"

- name: Ensure VM is stopped for post-creation configuration
  community.libvirt.virt:
    name: "{{ vm_name }}"
    state: shutdown
    uri: "qemu:///system"
  when: vm_created.changed
  failed_when: false
